image:
  - Visual Studio 2017
  - Visual Studio 2019
  - Ubuntu2004

clone_depth: 50

max_jobs: 4

environment:
  global:
    docker_ipv6: true
    MONOLITHIC: no
    TESTS_REDUCED_KEYLENGTHS: yes
    TZ: Europe/Zurich
    arch: x86_64
    bits: 64
    SONARCLOUD_LOGIN:
        secure: NzuE/IvDpmbBdfJWPHeBldaP010Cp6VJoO6maZ+ucWJlJtag1MeUbfdHrlHF9SnT
    DEPS_BUILD_DIR: ./dependencies/

  matrix:
    - TEST: win64
      MONOLITHIC: yes
    - TEST: wintun
      MONOLITHIC: yes
    - TEST: printf-builtin
      MONOLITHIC: yes
    - TEST: sonarcloud
      MONOLITHIC: no
    - TEST: wintun-sonarcloud
      MONOLITHIC: yes      
    - TEST: all
    - TEST: all
      MONOLITHIC: yes
    - TEST: coverage
    - TEST: all
      LEAK_DETECTIVE: yes
    - TEST: botan
    - TEST: openssl
    - TEST: openssl
      LEAK_DETECTIVE: yes
    - TEST: gcrypt
    - TEST: gcrypt
      LEAK_DETECTIVE: yes
    - TEST: apidoc
      MONOLITHIC: no

matrix:
  exclude:
    - image: Visual Studio 2017
      TEST: sonarcloud
      MONOLITHIC: no
    - image: Visual Studio 2017
      TEST: botan
    - image: Visual Studio 2017
      TEST: gcrypt
    - image: Visual Studio 2017
      TEST: openssl
    - image: Visual Studio 2017
      TEST: apidoc
    - image: Visual Studio 2017
      TEST: coverage
    - image: Visual Studio 2017
      TEST: all
      MONOLITHIC: no
    - image: Visual Studio 2017
      TEST: sonarcloud
      MONOLITHIC: no
    - image: Visual Studio 2019
      TEST: botan
    - image: Visual Studio 2019
      TEST: gcrypt
    - image: Visual Studio 2019
      TEST: openssl
    - image: Visual Studio 2019
      TEST: apidoc
    - image: Visual Studio 2019
      TEST: coverage
    - image: Visual Studio 2019
      TEST: all
      MONOLITHIC: no
    - image: Visual Studio 2019
      TEST: sonarcloud
      MONOLITHIC: no
    - image: Ubuntu2004
      TEST: wintun-sonarcloud
      MONOLITHIC: yes
    - image: Ubuntu2004
      TEST: wintun

# Don't build if it's a push with a tag
skip_tags: true

build_script:
  - '%MSYS_SH% --login -c ". /etc/profile && cd $APPVEYOR_BUILD_FOLDER && ./scripts/test.sh deps"'

test_script:
  - '%MSYS_SH% --login -c ". /etc/profile && touch /$MSYSTEM/etc/strongswan.conf"'
  - '%MSYS_SH% --login -c ". /etc/profile && cd $APPVEYOR_BUILD_FOLDER && ./scripts/test.sh"'

install:
  - set CCACHE_DIR=C:\CCACHE
  - tzutil /s "Central European Standard Time"
  - set MSYS_SH=C:\msys%BITS%\usr\bin\sh.exe
  - set MSYSTEM=MINGW%BITS%
  - set TEST=win%BITS%
  - |
      set IMG=%APPVEYOR_BUILD_WORKER_IMAGE:~-4%
      set OPENSSL=OpenSSL
      IF "%IMG%" == "2017" set OPENSSL=OpenSSL-v11
      IF "%IMG%" == "2019" set OPENSSL=OpenSSL-v111
      set OPENSSL_DIR=/c/%OPENSSL%-%TEST%
      C:\%OPENSSL%-%TEST%\bin\openssl.exe version -a

for:
- matrix:
    only:
      - image: Ubuntu2004
      - TEST: sonarcloud
  clone_depth: 0

  install:
    - sudo apt-get update -qq
    - sudo apt-get install -qq bison flex gperf gettext libgmp-dev libssl-dev libgcrypt11-dev
  build_script:
    - ./scripts/test.sh deps
    - ./scripts/test.sh pydeps
    - ./scripts/test.sh build-deps
  test_script:
    - ./scripts/test.sh

- matrix:
    only:
      - image: Ubuntu2004

  install:
    - sudo apt-get update -qq
    - sudo apt-get install -qq bison flex gperf gettext libgmp-dev libssl-dev libgcrypt11-dev
  build_script:
    - ./scripts/test.sh deps
    - ./scripts/test.sh pydeps
    - ./scripts/test.sh build-deps
  test_script:
    - ./scripts/test.sh

- matrix:
    except:
      - image: Ubuntu2004
  build_script:
    - '%MSYS_SH% --login -c ". /etc/profile && cd $APPVEYOR_BUILD_FOLDER && ./scripts/test.sh deps"'
  test_script:
    - '%MSYS_SH% --login -c ". /etc/profile && cd $APPVEYOR_BUILD_FOLDER && ./scripts/test.sh"'
  install:
    - set CCACHE_DIR=C:\CCACHE
    - set MSYS_SH=C:\msys%BITS%\usr\bin\sh.exe
    - set MSYSTEM=MINGW%BITS%
    # update msys2
    - '%MSYS_SH% --login -c ". /etc/profile && curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"'
    - '%MSYS_SH% --login -c ". /etc/profile && curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"'
    - '%MSYS_SH% --login -c ". /etc/profile && pacman-key --verify msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"'
    - '%MSYS_SH% --login -c ". /etc/profile && pacman -U --noconfirm msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"'
    - ps: Get-Process | Where-Object {$_.path -like 'C:\msys64*'} | Stop-Process
      # Update zstd and pacman https://github.com/msys2/MSYS2-packages/issues/2300
    - '%MSYS_SH% --login -c ". /etc/profile && pacman --noconfirm --upgrade https://repo.msys2.org/msys/x86_64/zstd-1.4.7-1-x86_64.pkg.tar.xz"'
    - '%MSYS_SH% --login -c ". /etc/profile && pacman --noconfirm --upgrade https://repo.msys2.org/msys/x86_64/pacman-5.2.2-5-x86_64.pkg.tar.xz"'
    - '%MSYS_SH% --login -c ". /etc/profile && pacman --needed --noconfirm -Sy --overwrite /etc/pacman.d/\* pacman-mirrors"'
    - '%MSYS_SH% --login -c ". /etc/profile && pacman --noconfirm -Syu"'
    - '%MSYS_SH% --login -c ". /etc/profile && pacman --noconfirm -Sy autoconf automake bison flex gperf gettext mingw-w64-x86_64-gmp gmp ccache unzip git"'

artifacts:
    - path: config.h
    - path: config.log
